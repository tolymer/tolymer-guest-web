/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.exportSymbol('proto.tolymer.v1.CreateEventRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.CreateGameRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.CreateParticipantRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.Date', null, global);
goog.exportSymbol('proto.tolymer.v1.DeleteGameRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.DeleteParticipantRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.DeleteTipRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.Event', null, global);
goog.exportSymbol('proto.tolymer.v1.Game', null, global);
goog.exportSymbol('proto.tolymer.v1.GameResult', null, global);
goog.exportSymbol('proto.tolymer.v1.GetEventRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.Participant', null, global);
goog.exportSymbol('proto.tolymer.v1.PostTipRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.Tip', null, global);
goog.exportSymbol('proto.tolymer.v1.TipResult', null, global);
goog.exportSymbol('proto.tolymer.v1.UpdateEventRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.UpdateGameRequest', null, global);
goog.exportSymbol('proto.tolymer.v1.UpdateParticipantRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.Date = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.Date, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.Date.displayName = 'proto.tolymer.v1.Date';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.Date.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.Date.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.Date} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Date.toObject = function(includeInstance, msg) {
  var f, obj = {
    year: jspb.Message.getFieldWithDefault(msg, 1, 0),
    month: jspb.Message.getFieldWithDefault(msg, 2, 0),
    day: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.Date}
 */
proto.tolymer.v1.Date.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.Date;
  return proto.tolymer.v1.Date.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.Date} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.Date}
 */
proto.tolymer.v1.Date.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.Date.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.Date.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.Date} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Date.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMonth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 year = 1;
 * @return {number}
 */
proto.tolymer.v1.Date.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tolymer.v1.Date.prototype.setYear = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 month = 2;
 * @return {number}
 */
proto.tolymer.v1.Date.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.Date.prototype.setMonth = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 day = 3;
 * @return {number}
 */
proto.tolymer.v1.Date.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tolymer.v1.Date.prototype.setDay = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.GetEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.GetEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.GetEventRequest.displayName = 'proto.tolymer.v1.GetEventRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.GetEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.GetEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.GetEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.GetEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.GetEventRequest}
 */
proto.tolymer.v1.GetEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.GetEventRequest;
  return proto.tolymer.v1.GetEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.GetEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.GetEventRequest}
 */
proto.tolymer.v1.GetEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.GetEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.GetEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.GetEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.GetEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.GetEventRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.GetEventRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.CreateEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.CreateEventRequest.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.CreateEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.CreateEventRequest.displayName = 'proto.tolymer.v1.CreateEventRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.CreateEventRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.CreateEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.CreateEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.CreateEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    date: (f = msg.getDate()) && proto.tolymer.v1.Date.toObject(includeInstance, f),
    participantsList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.CreateEventRequest}
 */
proto.tolymer.v1.CreateEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.CreateEventRequest;
  return proto.tolymer.v1.CreateEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.CreateEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.CreateEventRequest}
 */
proto.tolymer.v1.CreateEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.tolymer.v1.Date;
      reader.readMessage(value,proto.tolymer.v1.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addParticipants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.CreateEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.CreateEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.CreateEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tolymer.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getParticipantsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.tolymer.v1.CreateEventRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.CreateEventRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.tolymer.v1.CreateEventRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.CreateEventRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Date date = 3;
 * @return {?proto.tolymer.v1.Date}
 */
proto.tolymer.v1.CreateEventRequest.prototype.getDate = function() {
  return /** @type{?proto.tolymer.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.tolymer.v1.Date, 3));
};


/** @param {?proto.tolymer.v1.Date|undefined} value */
proto.tolymer.v1.CreateEventRequest.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tolymer.v1.CreateEventRequest.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.CreateEventRequest.prototype.hasDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string participants = 4;
 * @return {!Array<string>}
 */
proto.tolymer.v1.CreateEventRequest.prototype.getParticipantsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.tolymer.v1.CreateEventRequest.prototype.setParticipantsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tolymer.v1.CreateEventRequest.prototype.addParticipants = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tolymer.v1.CreateEventRequest.prototype.clearParticipantsList = function() {
  this.setParticipantsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.UpdateEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.UpdateEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.UpdateEventRequest.displayName = 'proto.tolymer.v1.UpdateEventRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.UpdateEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.UpdateEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    date: (f = msg.getDate()) && proto.tolymer.v1.Date.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.UpdateEventRequest}
 */
proto.tolymer.v1.UpdateEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.UpdateEventRequest;
  return proto.tolymer.v1.UpdateEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.UpdateEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.UpdateEventRequest}
 */
proto.tolymer.v1.UpdateEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.tolymer.v1.Date;
      reader.readMessage(value,proto.tolymer.v1.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 5:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.UpdateEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.UpdateEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tolymer.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateEventRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateEventRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateEventRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Date date = 4;
 * @return {?proto.tolymer.v1.Date}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.getDate = function() {
  return /** @type{?proto.tolymer.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.tolymer.v1.Date, 4));
};


/** @param {?proto.tolymer.v1.Date|undefined} value */
proto.tolymer.v1.UpdateEventRequest.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tolymer.v1.UpdateEventRequest.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.hasDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 5;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 5));
};


/** @param {?proto.google.protobuf.FieldMask|undefined} value */
proto.tolymer.v1.UpdateEventRequest.prototype.setUpdateMask = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tolymer.v1.UpdateEventRequest.prototype.clearUpdateMask = function() {
  this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.UpdateEventRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.CreateParticipantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.CreateParticipantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.CreateParticipantRequest.displayName = 'proto.tolymer.v1.CreateParticipantRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.CreateParticipantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.CreateParticipantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.CreateParticipantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateParticipantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.CreateParticipantRequest}
 */
proto.tolymer.v1.CreateParticipantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.CreateParticipantRequest;
  return proto.tolymer.v1.CreateParticipantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.CreateParticipantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.CreateParticipantRequest}
 */
proto.tolymer.v1.CreateParticipantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.CreateParticipantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.CreateParticipantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.CreateParticipantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateParticipantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.CreateParticipantRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.CreateParticipantRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tolymer.v1.CreateParticipantRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.CreateParticipantRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.UpdateParticipantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.UpdateParticipantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.UpdateParticipantRequest.displayName = 'proto.tolymer.v1.UpdateParticipantRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.UpdateParticipantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.UpdateParticipantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateParticipantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    participantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.UpdateParticipantRequest}
 */
proto.tolymer.v1.UpdateParticipantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.UpdateParticipantRequest;
  return proto.tolymer.v1.UpdateParticipantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.UpdateParticipantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.UpdateParticipantRequest}
 */
proto.tolymer.v1.UpdateParticipantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParticipantId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.UpdateParticipantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.UpdateParticipantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateParticipantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParticipantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateParticipantRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 participant_id = 2;
 * @return {number}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.getParticipantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.UpdateParticipantRequest.prototype.setParticipantId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateParticipantRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 4));
};


/** @param {?proto.google.protobuf.FieldMask|undefined} value */
proto.tolymer.v1.UpdateParticipantRequest.prototype.setUpdateMask = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tolymer.v1.UpdateParticipantRequest.prototype.clearUpdateMask = function() {
  this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.UpdateParticipantRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.DeleteParticipantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.DeleteParticipantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.DeleteParticipantRequest.displayName = 'proto.tolymer.v1.DeleteParticipantRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.DeleteParticipantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.DeleteParticipantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.DeleteParticipantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteParticipantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    participantId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.DeleteParticipantRequest}
 */
proto.tolymer.v1.DeleteParticipantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.DeleteParticipantRequest;
  return proto.tolymer.v1.DeleteParticipantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.DeleteParticipantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.DeleteParticipantRequest}
 */
proto.tolymer.v1.DeleteParticipantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParticipantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.DeleteParticipantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.DeleteParticipantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.DeleteParticipantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteParticipantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParticipantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.DeleteParticipantRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.DeleteParticipantRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 participant_id = 2;
 * @return {number}
 */
proto.tolymer.v1.DeleteParticipantRequest.prototype.getParticipantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.DeleteParticipantRequest.prototype.setParticipantId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.CreateGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.CreateGameRequest.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.CreateGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.CreateGameRequest.displayName = 'proto.tolymer.v1.CreateGameRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.CreateGameRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.CreateGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.CreateGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.CreateGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tolymer.v1.GameResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.CreateGameRequest}
 */
proto.tolymer.v1.CreateGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.CreateGameRequest;
  return proto.tolymer.v1.CreateGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.CreateGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.CreateGameRequest}
 */
proto.tolymer.v1.CreateGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = new proto.tolymer.v1.GameResult;
      reader.readMessage(value,proto.tolymer.v1.GameResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.CreateGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.CreateGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.CreateGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.CreateGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tolymer.v1.GameResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.CreateGameRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.CreateGameRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GameResult results = 2;
 * @return {!Array<!proto.tolymer.v1.GameResult>}
 */
proto.tolymer.v1.CreateGameRequest.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.GameResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.GameResult, 2));
};


/** @param {!Array<!proto.tolymer.v1.GameResult>} value */
proto.tolymer.v1.CreateGameRequest.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tolymer.v1.GameResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.GameResult}
 */
proto.tolymer.v1.CreateGameRequest.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tolymer.v1.GameResult, opt_index);
};


proto.tolymer.v1.CreateGameRequest.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.UpdateGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.UpdateGameRequest.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.UpdateGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.UpdateGameRequest.displayName = 'proto.tolymer.v1.UpdateGameRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.UpdateGameRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.UpdateGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.UpdateGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tolymer.v1.GameResult.toObject, includeInstance),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.UpdateGameRequest}
 */
proto.tolymer.v1.UpdateGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.UpdateGameRequest;
  return proto.tolymer.v1.UpdateGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.UpdateGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.UpdateGameRequest}
 */
proto.tolymer.v1.UpdateGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 3:
      var value = new proto.tolymer.v1.GameResult;
      reader.readMessage(value,proto.tolymer.v1.GameResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 4:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.UpdateGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.UpdateGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.UpdateGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tolymer.v1.GameResult.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.UpdateGameRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 game_id = 2;
 * @return {number}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.UpdateGameRequest.prototype.setGameId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated GameResult results = 3;
 * @return {!Array<!proto.tolymer.v1.GameResult>}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.GameResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.GameResult, 3));
};


/** @param {!Array<!proto.tolymer.v1.GameResult>} value */
proto.tolymer.v1.UpdateGameRequest.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tolymer.v1.GameResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.GameResult}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tolymer.v1.GameResult, opt_index);
};


proto.tolymer.v1.UpdateGameRequest.prototype.clearResultsList = function() {
  this.setResultsList([]);
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 4));
};


/** @param {?proto.google.protobuf.FieldMask|undefined} value */
proto.tolymer.v1.UpdateGameRequest.prototype.setUpdateMask = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tolymer.v1.UpdateGameRequest.prototype.clearUpdateMask = function() {
  this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.UpdateGameRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.DeleteGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.DeleteGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.DeleteGameRequest.displayName = 'proto.tolymer.v1.DeleteGameRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.DeleteGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.DeleteGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.DeleteGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.DeleteGameRequest}
 */
proto.tolymer.v1.DeleteGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.DeleteGameRequest;
  return proto.tolymer.v1.DeleteGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.DeleteGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.DeleteGameRequest}
 */
proto.tolymer.v1.DeleteGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.DeleteGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.DeleteGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.DeleteGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.DeleteGameRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.DeleteGameRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 game_id = 2;
 * @return {number}
 */
proto.tolymer.v1.DeleteGameRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.DeleteGameRequest.prototype.setGameId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.PostTipRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.PostTipRequest.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.PostTipRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.PostTipRequest.displayName = 'proto.tolymer.v1.PostTipRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.PostTipRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.PostTipRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.PostTipRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.PostTipRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.PostTipRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tolymer.v1.TipResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.PostTipRequest}
 */
proto.tolymer.v1.PostTipRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.PostTipRequest;
  return proto.tolymer.v1.PostTipRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.PostTipRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.PostTipRequest}
 */
proto.tolymer.v1.PostTipRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 2:
      var value = new proto.tolymer.v1.TipResult;
      reader.readMessage(value,proto.tolymer.v1.TipResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.PostTipRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.PostTipRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.PostTipRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.PostTipRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tolymer.v1.TipResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.PostTipRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.PostTipRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TipResult results = 2;
 * @return {!Array<!proto.tolymer.v1.TipResult>}
 */
proto.tolymer.v1.PostTipRequest.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.TipResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.TipResult, 2));
};


/** @param {!Array<!proto.tolymer.v1.TipResult>} value */
proto.tolymer.v1.PostTipRequest.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tolymer.v1.TipResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.TipResult}
 */
proto.tolymer.v1.PostTipRequest.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tolymer.v1.TipResult, opt_index);
};


proto.tolymer.v1.PostTipRequest.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.DeleteTipRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.DeleteTipRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.DeleteTipRequest.displayName = 'proto.tolymer.v1.DeleteTipRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.DeleteTipRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.DeleteTipRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.DeleteTipRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteTipRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.DeleteTipRequest}
 */
proto.tolymer.v1.DeleteTipRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.DeleteTipRequest;
  return proto.tolymer.v1.DeleteTipRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.DeleteTipRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.DeleteTipRequest}
 */
proto.tolymer.v1.DeleteTipRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.DeleteTipRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.DeleteTipRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.DeleteTipRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.DeleteTipRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string event_token = 1;
 * @return {string}
 */
proto.tolymer.v1.DeleteTipRequest.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.DeleteTipRequest.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.Event.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.Event.displayName = 'proto.tolymer.v1.Event';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.Event.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    date: (f = msg.getDate()) && proto.tolymer.v1.Date.toObject(includeInstance, f),
    participantsList: jspb.Message.toObjectList(msg.getParticipantsList(),
    proto.tolymer.v1.Participant.toObject, includeInstance),
    gamesList: jspb.Message.toObjectList(msg.getGamesList(),
    proto.tolymer.v1.Game.toObject, includeInstance),
    tip: (f = msg.getTip()) && proto.tolymer.v1.Tip.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.Event}
 */
proto.tolymer.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.Event;
  return proto.tolymer.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.Event}
 */
proto.tolymer.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.tolymer.v1.Date;
      reader.readMessage(value,proto.tolymer.v1.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 5:
      var value = new proto.tolymer.v1.Participant;
      reader.readMessage(value,proto.tolymer.v1.Participant.deserializeBinaryFromReader);
      msg.addParticipants(value);
      break;
    case 6:
      var value = new proto.tolymer.v1.Game;
      reader.readMessage(value,proto.tolymer.v1.Game.deserializeBinaryFromReader);
      msg.addGames(value);
      break;
    case 7:
      var value = new proto.tolymer.v1.Tip;
      reader.readMessage(value,proto.tolymer.v1.Tip.deserializeBinaryFromReader);
      msg.setTip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tolymer.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getParticipantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tolymer.v1.Participant.serializeBinaryToWriter
    );
  }
  f = message.getGamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.tolymer.v1.Game.serializeBinaryToWriter
    );
  }
  f = message.getTip();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tolymer.v1.Tip.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.tolymer.v1.Event.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tolymer.v1.Event.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.tolymer.v1.Event.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.Event.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.tolymer.v1.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tolymer.v1.Event.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Date date = 4;
 * @return {?proto.tolymer.v1.Date}
 */
proto.tolymer.v1.Event.prototype.getDate = function() {
  return /** @type{?proto.tolymer.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.tolymer.v1.Date, 4));
};


/** @param {?proto.tolymer.v1.Date|undefined} value */
proto.tolymer.v1.Event.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tolymer.v1.Event.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.Event.prototype.hasDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Participant participants = 5;
 * @return {!Array<!proto.tolymer.v1.Participant>}
 */
proto.tolymer.v1.Event.prototype.getParticipantsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.Participant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.Participant, 5));
};


/** @param {!Array<!proto.tolymer.v1.Participant>} value */
proto.tolymer.v1.Event.prototype.setParticipantsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tolymer.v1.Participant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.Participant}
 */
proto.tolymer.v1.Event.prototype.addParticipants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tolymer.v1.Participant, opt_index);
};


proto.tolymer.v1.Event.prototype.clearParticipantsList = function() {
  this.setParticipantsList([]);
};


/**
 * repeated Game games = 6;
 * @return {!Array<!proto.tolymer.v1.Game>}
 */
proto.tolymer.v1.Event.prototype.getGamesList = function() {
  return /** @type{!Array<!proto.tolymer.v1.Game>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.Game, 6));
};


/** @param {!Array<!proto.tolymer.v1.Game>} value */
proto.tolymer.v1.Event.prototype.setGamesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.tolymer.v1.Game=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.Game}
 */
proto.tolymer.v1.Event.prototype.addGames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.tolymer.v1.Game, opt_index);
};


proto.tolymer.v1.Event.prototype.clearGamesList = function() {
  this.setGamesList([]);
};


/**
 * optional Tip tip = 7;
 * @return {?proto.tolymer.v1.Tip}
 */
proto.tolymer.v1.Event.prototype.getTip = function() {
  return /** @type{?proto.tolymer.v1.Tip} */ (
    jspb.Message.getWrapperField(this, proto.tolymer.v1.Tip, 7));
};


/** @param {?proto.tolymer.v1.Tip|undefined} value */
proto.tolymer.v1.Event.prototype.setTip = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tolymer.v1.Event.prototype.clearTip = function() {
  this.setTip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tolymer.v1.Event.prototype.hasTip = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.Participant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.Participant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.Participant.displayName = 'proto.tolymer.v1.Participant';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.Participant.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.Participant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.Participant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Participant.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.Participant}
 */
proto.tolymer.v1.Participant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.Participant;
  return proto.tolymer.v1.Participant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.Participant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.Participant}
 */
proto.tolymer.v1.Participant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.Participant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.Participant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.Participant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Participant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.tolymer.v1.Participant.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tolymer.v1.Participant.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tolymer.v1.Participant.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.Participant.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.Game = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.Game.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.Game.displayName = 'proto.tolymer.v1.Game';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.Game.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.Game.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.Game.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.Game} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Game.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rank: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tolymer.v1.GameResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.Game}
 */
proto.tolymer.v1.Game.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.Game;
  return proto.tolymer.v1.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.Game}
 */
proto.tolymer.v1.Game.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 4:
      var value = new proto.tolymer.v1.GameResult;
      reader.readMessage(value,proto.tolymer.v1.GameResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.Game.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Game.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEventToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tolymer.v1.GameResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.tolymer.v1.Game.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tolymer.v1.Game.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string event_token = 2;
 * @return {string}
 */
proto.tolymer.v1.Game.prototype.getEventToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tolymer.v1.Game.prototype.setEventToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 rank = 3;
 * @return {number}
 */
proto.tolymer.v1.Game.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tolymer.v1.Game.prototype.setRank = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated GameResult results = 4;
 * @return {!Array<!proto.tolymer.v1.GameResult>}
 */
proto.tolymer.v1.Game.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.GameResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.GameResult, 4));
};


/** @param {!Array<!proto.tolymer.v1.GameResult>} value */
proto.tolymer.v1.Game.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tolymer.v1.GameResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.GameResult}
 */
proto.tolymer.v1.Game.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tolymer.v1.GameResult, opt_index);
};


proto.tolymer.v1.Game.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.GameResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.GameResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.GameResult.displayName = 'proto.tolymer.v1.GameResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.GameResult.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.GameResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.GameResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.GameResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    participantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.GameResult}
 */
proto.tolymer.v1.GameResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.GameResult;
  return proto.tolymer.v1.GameResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.GameResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.GameResult}
 */
proto.tolymer.v1.GameResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParticipantId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.GameResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.GameResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.GameResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.GameResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticipantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional int64 participant_id = 1;
 * @return {number}
 */
proto.tolymer.v1.GameResult.prototype.getParticipantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tolymer.v1.GameResult.prototype.setParticipantId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rank = 2;
 * @return {number}
 */
proto.tolymer.v1.GameResult.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tolymer.v1.GameResult.prototype.setRank = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double score = 3;
 * @return {number}
 */
proto.tolymer.v1.GameResult.prototype.getScore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.tolymer.v1.GameResult.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.Tip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tolymer.v1.Tip.repeatedFields_, null);
};
goog.inherits(proto.tolymer.v1.Tip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.Tip.displayName = 'proto.tolymer.v1.Tip';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tolymer.v1.Tip.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.Tip.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.Tip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.Tip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Tip.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tolymer.v1.TipResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.Tip}
 */
proto.tolymer.v1.Tip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.Tip;
  return proto.tolymer.v1.Tip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.Tip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.Tip}
 */
proto.tolymer.v1.Tip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tolymer.v1.TipResult;
      reader.readMessage(value,proto.tolymer.v1.TipResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.Tip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.Tip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.Tip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.Tip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tolymer.v1.TipResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TipResult results = 1;
 * @return {!Array<!proto.tolymer.v1.TipResult>}
 */
proto.tolymer.v1.Tip.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tolymer.v1.TipResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tolymer.v1.TipResult, 1));
};


/** @param {!Array<!proto.tolymer.v1.TipResult>} value */
proto.tolymer.v1.Tip.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tolymer.v1.TipResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tolymer.v1.TipResult}
 */
proto.tolymer.v1.Tip.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tolymer.v1.TipResult, opt_index);
};


proto.tolymer.v1.Tip.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tolymer.v1.TipResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tolymer.v1.TipResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tolymer.v1.TipResult.displayName = 'proto.tolymer.v1.TipResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tolymer.v1.TipResult.prototype.toObject = function(opt_includeInstance) {
  return proto.tolymer.v1.TipResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tolymer.v1.TipResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.TipResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    participantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    score: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tolymer.v1.TipResult}
 */
proto.tolymer.v1.TipResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tolymer.v1.TipResult;
  return proto.tolymer.v1.TipResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tolymer.v1.TipResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tolymer.v1.TipResult}
 */
proto.tolymer.v1.TipResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParticipantId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tolymer.v1.TipResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tolymer.v1.TipResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tolymer.v1.TipResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tolymer.v1.TipResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticipantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int64 participant_id = 1;
 * @return {number}
 */
proto.tolymer.v1.TipResult.prototype.getParticipantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tolymer.v1.TipResult.prototype.setParticipantId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double score = 2;
 * @return {number}
 */
proto.tolymer.v1.TipResult.prototype.getScore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.tolymer.v1.TipResult.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.tolymer.v1);
